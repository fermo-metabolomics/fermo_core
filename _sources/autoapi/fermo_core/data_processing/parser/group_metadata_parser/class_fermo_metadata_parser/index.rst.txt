fermo_core.data_processing.parser.group_metadata_parser.class_fermo_metadata_parser
===================================================================================

.. py:module:: fermo_core.data_processing.parser.group_metadata_parser.class_fermo_metadata_parser

.. autoapi-nested-parse::

   Parses fermo-style group metadata file

   Copyright (c) 2022 to present Mitja Maximilian Zdouc, PhD

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.



Attributes
----------

.. autoapisummary::

   fermo_core.data_processing.parser.group_metadata_parser.class_fermo_metadata_parser.logger


Classes
-------

.. autoapisummary::

   fermo_core.data_processing.parser.group_metadata_parser.class_fermo_metadata_parser.MetadataFermoParser


Module Contents
---------------

.. py:data:: logger

.. py:class:: MetadataFermoParser(**data: Any)

   Bases: :py:obj:`pydantic.BaseModel`


   Interface to parse fermo-style group metadata file.

   Attributes:
       stats: a Stats object instance
       df: a Pandas dataframe to extract data from


   .. py:attribute:: stats
      :type:  fermo_core.data_processing.class_stats.Stats


   .. py:attribute:: df
      :type:  Any


   .. py:method:: return_stats() -> fermo_core.data_processing.class_stats.Stats

      Return the modified objects

      Returns:
           The modified stats object



   .. py:method:: validate_sample_names()

      Validate overlap of sample names from peaktable and group metadata file

      Raises:
          RuntimeError: sample names in df do not match peaktable-extracted ones



   .. py:method:: unassign_default_set()

      Validate that all samples from peaktable can be found in metadata file



   .. py:method:: extract_blanks()

      Extract all samples that were assigned the signal word 'BLANK'.



   .. py:method:: prepare_ctgrs()

      Extract categories and groups from dataframe and assign to stats



   .. py:method:: run_parser()

      Parse the corresponding metadata file and assign data



