fermo_core.data_analysis.annotation_manager.class_ms2query_annotator
====================================================================

.. py:module:: fermo_core.data_analysis.annotation_manager.class_ms2query_annotator

.. autoapi-nested-parse::

   Runs the ms2query library annotation module.

   Copyright (c) 2022 to present Mitja Maximilian Zdouc, PhD

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in all
   copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   SOFTWARE.



Attributes
----------

.. autoapisummary::

   fermo_core.data_analysis.annotation_manager.class_ms2query_annotator.logger


Classes
-------

.. autoapisummary::

   fermo_core.data_analysis.annotation_manager.class_ms2query_annotator.MS2QueryAnnotator


Module Contents
---------------

.. py:data:: logger

.. py:class:: MS2QueryAnnotator(**data: Any)

   Bases: :py:obj:`pydantic.BaseModel`


   Pydantic-based class to organize calling and logging of ms2query lib matching

   Attributes:
       features: Repository object, holds "General Feature" objects
       params: User-provided parameters
       active_features: a set of active features
       cutoff: a float between 0 and 1 indicating the minimum accepted score


   .. py:attribute:: features
      :type:  fermo_core.data_processing.class_repository.Repository


   .. py:attribute:: params
      :type:  fermo_core.input_output.class_parameter_manager.ParameterManager


   .. py:attribute:: active_features
      :type:  set


   .. py:attribute:: cutoff
      :type:  float


   .. py:method:: return_features() -> fermo_core.data_processing.class_repository.Repository

      Return the modified Feature objects as Repository object

      Returns:
          A Repository object with modified Feature objects



   .. py:method:: assign_feature_info(results_path: str | pathlib.Path)

      Load ms2query results and add annotation to Feature objects

      Arguments:
          results_path: location of the ms2query results file



